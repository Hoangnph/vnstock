version: '3.8'

services:
  # PostgreSQL with TimescaleDB extension
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: stockai_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: stockai
      POSTGRES_USER: stockai_user
      POSTGRES_PASSWORD: stockai_password_2025
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
      - ./backups:/backups
    networks:
      - stockai_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stockai_user -d stockai"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: stockai_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - stockai_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: stockai_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@stockai.com
      PGADMIN_DEFAULT_PASSWORD: admin_password_2025
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - stockai_network
    depends_on:
      postgres:
        condition: service_healthy

  # Database backup service
  backup:
    image: postgres:15-alpine
    container_name: stockai_backup
    restart: "no"
    environment:
      PGPASSWORD: stockai_password_2025
    volumes:
      - ./backups:/backups
      - ./scripts:/scripts
    networks:
      - stockai_network
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Backup service ready. Use: docker exec stockai_backup /scripts/backup.sh'
        tail -f /dev/null
      "

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  stockai_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
