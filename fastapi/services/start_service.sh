#!/bin/bash

# CII Intraday Service Startup Script
# S·ª≠ d·ª•ng ƒë·ªÉ ch·∫°y service trong background

SERVICE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SERVICE_NAME="cii_intraday_service"
LOG_FILE="$SERVICE_DIR/logs/service.log"
PID_FILE="$SERVICE_DIR/logs/service.pid"

# T·∫°o th∆∞ m·ª•c logs n·∫øu ch∆∞a c√≥
mkdir -p "$SERVICE_DIR/logs"

# H√†m ki·ªÉm tra service c√≥ ƒëang ch·∫°y kh√¥ng
is_running() {
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        if ps -p "$PID" > /dev/null 2>&1; then
            return 0
        else
            rm -f "$PID_FILE"
            return 1
        fi
    fi
    return 1
}

# H√†m kh·ªüi ƒë·ªông service
start_service() {
    if is_running; then
        echo "Service $SERVICE_NAME ƒë√£ ƒëang ch·∫°y (PID: $(cat $PID_FILE))"
        return 1
    fi
    
    echo "ƒêang kh·ªüi ƒë·ªông $SERVICE_NAME..."
    
    # Ch·∫°y service trong background
    cd "$SERVICE_DIR"
    nohup python run_service.py > "$LOG_FILE" 2>&1 &
    PID=$!
    
    # L∆∞u PID
    echo $PID > "$PID_FILE"
    
    # Ch·ªù m·ªôt ch√∫t ƒë·ªÉ ki·ªÉm tra
    sleep 2
    
    if is_running; then
        echo "‚úÖ Service $SERVICE_NAME ƒë√£ kh·ªüi ƒë·ªông th√†nh c√¥ng (PID: $PID)"
        echo "üìù Log file: $LOG_FILE"
        echo "üîÑ ƒê·ªÉ d·ª´ng service: $0 stop"
        return 0
    else
        echo "‚ùå Kh√¥ng th·ªÉ kh·ªüi ƒë·ªông service"
        rm -f "$PID_FILE"
        return 1
    fi
}

# H√†m d·ª´ng service
stop_service() {
    if ! is_running; then
        echo "Service $SERVICE_NAME kh√¥ng ƒëang ch·∫°y"
        return 1
    fi
    
    PID=$(cat "$PID_FILE")
    echo "ƒêang d·ª´ng service $SERVICE_NAME (PID: $PID)..."
    
    # G·ª≠i t√≠n hi·ªáu SIGTERM
    kill -TERM "$PID"
    
    # Ch·ªù service d·ª´ng
    for i in {1..10}; do
        if ! ps -p "$PID" > /dev/null 2>&1; then
            break
        fi
        sleep 1
    done
    
    # N·∫øu v·∫´n ch·∫°y, force kill
    if ps -p "$PID" > /dev/null 2>&1; then
        echo "Force killing service..."
        kill -KILL "$PID"
    fi
    
    rm -f "$PID_FILE"
    echo "‚úÖ Service $SERVICE_NAME ƒë√£ d·ª´ng"
}

# H√†m ki·ªÉm tra tr·∫°ng th√°i
status_service() {
    if is_running; then
        PID=$(cat "$PID_FILE")
        echo "‚úÖ Service $SERVICE_NAME ƒëang ch·∫°y (PID: $PID)"
        echo "üìù Log file: $LOG_FILE"
        
        # Hi·ªÉn th·ªã th√¥ng tin process
        echo "üìä Process info:"
        ps -p "$PID" -o pid,ppid,cmd,etime,pcpu,pmem
        
        # Hi·ªÉn th·ªã log cu·ªëi c√πng
        echo "üìã Recent logs:"
        tail -5 "$LOG_FILE"
    else
        echo "‚ùå Service $SERVICE_NAME kh√¥ng ƒëang ch·∫°y"
    fi
}

# H√†m restart service
restart_service() {
    stop_service
    sleep 2
    start_service
}

# H√†m xem log
view_logs() {
    if [ -f "$LOG_FILE" ]; then
        echo "üìù Viewing logs from $LOG_FILE:"
        echo "Press Ctrl+C to exit"
        tail -f "$LOG_FILE"
    else
        echo "‚ùå Log file kh√¥ng t·ªìn t·∫°i: $LOG_FILE"
    fi
}

# H√†m hi·ªÉn th·ªã help
show_help() {
    echo "CII Intraday Service Management Script"
    echo ""
    echo "Usage: $0 {start|stop|restart|status|logs|help}"
    echo ""
    echo "Commands:"
    echo "  start   - Kh·ªüi ƒë·ªông service"
    echo "  stop    - D·ª´ng service"
    echo "  restart - Kh·ªüi ƒë·ªông l·∫°i service"
    echo "  status  - Ki·ªÉm tra tr·∫°ng th√°i service"
    echo "  logs    - Xem log real-time"
    echo "  help    - Hi·ªÉn th·ªã help n√†y"
    echo ""
    echo "Files:"
    echo "  Service dir: $SERVICE_DIR"
    echo "  Log file:    $LOG_FILE"
    echo "  PID file:    $PID_FILE"
}

# Main script
case "$1" in
    start)
        start_service
        ;;
    stop)
        stop_service
        ;;
    restart)
        restart_service
        ;;
    status)
        status_service
        ;;
    logs)
        view_logs
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        echo "‚ùå L·ªánh kh√¥ng h·ª£p l·ªá: $1"
        echo ""
        show_help
        exit 1
        ;;
esac

exit $?
